# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  networking.hostId = "215f7219";
  zramSwap.enable = true;

  boot.plymouth.enable = true;
  boot.plymouth.theme = lib.mkForce "bgrt";
  boot.loader.grub.gfxmodeEfi = "1440x960";

  boot.initrd.systemd.enable = true;
  boot.initrd.services.lvm.enable = true;
  # boot.initrd.preLVMCommands = ''alias lvm=echo $@'';

  boot.kernelParams = [
    "nohibernate"
    "quiet"
    "mem_sleep_default=deep"
    "nowatchdog"
    "resume=UUID=4b07b1e0-bc31-438c-9adc-4cf15bb48245"
  ];
  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "thunderbolt"
    "nvme"
    "usb_storage"
    "sd_mod"
    "aesni_intel"
    "cryptd"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.initrd.luks.devices = {
    "luks-rpool-nvme-Samsung_SSD_970_EVO_Plus_1TB_S59ANMFNB34408L-part2".device = "/dev/disk/by-id/nvme-Samsung_SSD_970_EVO_Plus_1TB_S59ANMFNB34408L-part2";
  };

  fileSystems."/" = {
    device = "rpool/root";
    fsType = "zfs";
  };

  fileSystems."/home" = {
    device = "rpool/home";
    fsType = "zfs";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/5B33-A077";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  fileSystems."/var" = {
    device = "rpool/var";
    fsType = "zfs";
  };

  fileSystems."/nix" = {
    device = "rpool/nix";
    fsType = "zfs";
  };

  boot.resumeDevice = "/dev/disk/by-uuid/4b07b1e0-bc31-438c-9adc-4cf15bb48245";
  swapDevices = [ { device = "/dev/disk/by-uuid/4b07b1e0-bc31-438c-9adc-4cf15bb48245"; } ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp170s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
