# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

let
  mount_opts = [
    "rw"
    "noatime"
    "discard=async"
    "ssd"
    "compress-force=zstd"
    "space_cache=v2"
  ];
in
{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "thunderbolt"
    "nvme"
    "usb_storage"
    "sd_mod"
    "aesni_intel"
    "cryptd"
  ];
  boot.kernelParams = [
    "quiet"
    "mem_sleep_default=deep"
    "nowatchdog"
    "resume_offset=533760"
  ];
  boot.initrd.kernelModules = [ ];
  boot.initrd.systemd.enable = true;
  boot.initrd.services.lvm.enable = true;
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.supportedFilesystems = [ "btrfs" ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/d3d771ef-4ed9-4139-8670-e867f99ab80e";
    fsType = "btrfs";
    options = [ "subvol=@" ] ++ mount_opts;
  };

  boot.initrd.luks.devices."crypt".device = "/dev/disk/by-uuid/9704a321-63f6-481e-bb68-d3fd8362d61b";

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/d3d771ef-4ed9-4139-8670-e867f99ab80e";
    fsType = "btrfs";
    options = [ "subvol=@home" ] ++ mount_opts;
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/d3d771ef-4ed9-4139-8670-e867f99ab80e";
    fsType = "btrfs";
    options = [ "subvol=@nix" ] ++ mount_opts;
  };

  fileSystems."/var/log" = {
    device = "/dev/disk/by-uuid/d3d771ef-4ed9-4139-8670-e867f99ab80e";
    fsType = "btrfs";
    options = [ "subvol=@log" ] ++ mount_opts;
  };

  fileSystems."/swap" = {
    device = "/dev/disk/by-uuid/d3d771ef-4ed9-4139-8670-e867f99ab80e";
    fsType = "btrfs";
    options = [
      "subvol=@swap"
      "ssd"
    ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/BA27-059F";
    fsType = "vfat";
    options = [
      "fmask=0022"
      "dmask=0022"
    ];
  };

  boot.resumeDevice = "/dev/mapper/crypt";
  swapDevices = [
    {
      device = "/swap/swapfile";
    }
  ];
  zramSwap.enable = true;

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp170s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
